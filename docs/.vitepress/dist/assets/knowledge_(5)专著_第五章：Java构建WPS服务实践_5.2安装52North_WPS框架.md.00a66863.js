import{_ as t,o as a,c as e,d as s}from"./app.fa4fb96d.js";const i="/xuanmu-blogs/assets/img-2023-08-18-10-01-39.0061cfc2.png",o="/xuanmu-blogs/assets/img-2023-08-16-16-22-46.8ce8bd13.png",n="/xuanmu-blogs/assets/img-2023-08-16-16-22-56.0f53e199.png",c="/xuanmu-blogs/assets/img-2023-08-16-16-23-05.a455d3eb.png",l="/xuanmu-blogs/assets/img-2023-08-16-16-23-11.9374df58.png",r="/xuanmu-blogs/assets/img-2023-08-16-16-23-27.00d0a090.png",p="/xuanmu-blogs/assets/img-2023-08-16-16-23-37.7ad55237.png",v=JSON.parse('{"title":"5.2 安装52 North WPS 框架","description":"","frontmatter":{},"headers":[{"level":3,"title":"5.2.1 克隆WPS Git存储库","slug":"_5-2-1-克隆wps-git存储库","link":"#_5-2-1-克隆wps-git存储库","children":[]},{"level":3,"title":"5.2.2 构建WPS","slug":"_5-2-2-构建wps","link":"#_5-2-2-构建wps","children":[]},{"level":3,"title":"5.2.3.配置Tomcat","slug":"_5-2-3-配置tomcat","link":"#_5-2-3-配置tomcat","children":[]},{"level":3,"title":"5.2.4 部署工件","slug":"_5-2-4-部署工件","link":"#_5-2-4-部署工件","children":[]},{"level":3,"title":"5.2.5启动Tomcat","slug":"_5-2-5启动tomcat","link":"#_5-2-5启动tomcat","children":[]},{"level":3,"title":"5.2.6 测试项目","slug":"_5-2-6-测试项目","link":"#_5-2-6-测试项目","children":[]}],"relativePath":"knowledge/(5)专著_第五章：Java构建WPS服务实践/5.2安装52North_WPS框架.md"}'),_={name:"knowledge/(5)专著_第五章：Java构建WPS服务实践/5.2安装52North_WPS框架.md"},d=s(`<h1 id="_5-2-安装52-north-wps-框架" tabindex="-1">5.2 安装52 North WPS 框架 <a class="header-anchor" href="#_5-2-安装52-north-wps-框架" aria-hidden="true">#</a></h1><h3 id="_5-2-1-克隆wps-git存储库" tabindex="-1">5.2.1 克隆WPS Git存储库 <a class="header-anchor" href="#_5-2-1-克隆wps-git存储库" aria-hidden="true">#</a></h3><p>导航到您的本地目录(如果已经存在)，或者导航到一个方便的位置以在那里创建Git仓库。</p><p>执行以下命令：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">git clone https://github.com/52North/WPS.git</span></span>
<span class="line"></span></code></pre></div><p>WPS Git存储库将被克隆到子文件夹WPS中。 <img src="`+i+'" alt=""></p><h3 id="_5-2-2-构建wps" tabindex="-1">5.2.2 构建WPS <a class="header-anchor" href="#_5-2-2-构建wps" aria-hidden="true">#</a></h3><p>第一步，导入 Eclipse 或 IDEA，等待maven 下载相关依赖。使用Maven构建项目，<code>mvn clean install -P with-geotools -Dlicense.skip=true</code> ，其中，<code>-DSkipTests</code>为跳过测试，可以去掉。WPS的pom中，若部分插件如果报错，可以注释掉，确保项目pom文件中WPS模块的版本与需要使用的WPS版本相匹配。</p><p><img src="'+o+'" alt=""> 第二步，构建项目 出现Build Success时说明项目安装成功 <img src="'+n+'" alt=""></p><h3 id="_5-2-3-配置tomcat" tabindex="-1">5.2.3.配置Tomcat <a class="header-anchor" href="#_5-2-3-配置tomcat" aria-hidden="true">#</a></h3><p>在前面的章节中我们已经安装了Tomcat，在IDEA的启动配置中选择Tomcat Server，出现Tomcat的配置面板。按照提示内容进行Tomcat配置，输入Name为Tomcat的版本名称，Application Server中选择Tomcat的安装目录即可，URL为项目启动的访问连接，HTTP port 选择项目启动端口号，此处默认为8080，如果端口号与其他项目冲突，可自行修改。</p><p><img src="'+c+'" alt=""></p><h3 id="_5-2-4-部署工件" tabindex="-1">5.2.4 部署工件 <a class="header-anchor" href="#_5-2-4-部署工件" aria-hidden="true">#</a></h3><p>Tomcat Server 配置完成后点击Deployment部署工件，当项目启动后，Build构建的war包会被部署到Tomcat中启动。Applicaiton context默认为war包名称，可以自定义修改，如/wps。完成配置后点击Apply再点击确定。</p><p><img src="'+l+'" alt=""></p><h3 id="_5-2-5启动tomcat" tabindex="-1">5.2.5启动Tomcat <a class="header-anchor" href="#_5-2-5启动tomcat" aria-hidden="true">#</a></h3><p>点击项目启动按钮，WPS开始构建项目并部署，当进程结束后，会通过默认浏览器跳转到网页中，该网页由52N官方社区提供，通过GetCapabilities request using HTTP GET可以访问当前服务器中存在的算法列表。Client中包含对服务器的测试脚本，Documentation中包含项目文档。在Administration中是52North WPS的控制台，可以通过可视化界面上传和部署算法，在本文中，我们使用项目源代码以更灵活的方式来自定义算法服务。</p><p><img src="'+r+'" alt=""></p><h3 id="_5-2-6-测试项目" tabindex="-1">5.2.6 测试项目 <a class="header-anchor" href="#_5-2-6-测试项目" aria-hidden="true">#</a></h3><p>发送GetCapabilities 请求 查看已有算法，出现以下界面则表示项目启动和部署成功，能够访问到项目的默认算法服务。 <img src="'+p+'" alt=""></p>',20),h=[d];function m(g,u,S,P,T,b){return a(),e("div",null,h)}const x=t(_,[["render",m]]);export{v as __pageData,x as default};
