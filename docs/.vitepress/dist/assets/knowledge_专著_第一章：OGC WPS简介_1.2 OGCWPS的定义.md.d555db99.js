import{_ as e,o as i,c as r,d as o}from"./app.ba25a373.js";const s="/xuanmu-blogs/assets/img-2023-06-26-15-35-25.71e9141c.png",W=JSON.parse('{"title":"1.2 OGC WPS 的定义","description":"第一章：OGC WPS简介","frontmatter":{"title":"1.2 OGC WPS 的定义","description":"第一章：OGC WPS简介","date":"2023-6-26","tags":["OGC WPS理论方法及开发实践"]},"headers":[{"level":2,"title":"1.2 OGC WPS的基本概念","slug":"_1-2-ogc-wps的基本概念","link":"#_1-2-ogc-wps的基本概念","children":[{"level":3,"title":"1.2.1 与其他OGC WPS的关系","slug":"_1-2-1-与其他ogc-wps的关系","link":"#_1-2-1-与其他ogc-wps的关系","children":[]},{"level":3,"title":"1.2.2 术语和定义","slug":"_1-2-2-术语和定义","link":"#_1-2-2-术语和定义","children":[]},{"level":3,"title":"1.2.3 缩写术语","slug":"_1-2-3-缩写术语","link":"#_1-2-3-缩写术语","children":[]}]}],"relativePath":"knowledge/专著_第一章：OGC WPS简介/1.2 OGCWPS的定义.md"}'),t={name:"knowledge/专著_第一章：OGC WPS简介/1.2 OGCWPS的定义.md"},l=o('<h2 id="_1-2-ogc-wps的基本概念" tabindex="-1">1.2 OGC WPS的基本概念 <a class="header-anchor" href="#_1-2-ogc-wps的基本概念" aria-hidden="true">#</a></h2><p>OGC Web处理服务（WPS）接口标准指定了一个标准接口，该接口提供了对预定义进程的访问，并提供了可以实例化、控制和监视处理作业的作业控制操作。在这种情况下，术语过程指的是生成新数据或将某些输入数据转换为输出数据的任何算法、计算或模型。WPS支持执行计算过程，这些过程通常结合栅格、矢量和/或覆盖数据来生成新的栅格、矢量和/或覆盖数据。WPS提供的输入、处理和输出也可以是非空间的。WPS版本1.0.0于2007年6月发布。版本2.0.1于2015年1月发布。2.0.1是当前最新版本。</p><p>WPS标准使算法、计算或计算模型能够通过可配置的接口提供。该标准允许短时间运行的进程被同步调用，而长时间运行的进程可以选择性地异步调用。这意味着对于短时间运行的进程，WPS客户机可以等待WPS完成一个进程并返回结果。但是，对于长时间运行的进程，客户机可以选择在以后的某个时间点返回到WPS来检查作业是否完成，如果作业完成，则客户机可以检索结果。</p><p>WPS服务可以用作独立的处理引擎，也可以用作包含两个或多个WPS服务的服务链的一部分。它们也可以作为工作流的一部分使用，工作流可能包括非WPS和非ogcweb服务组件。该标准并没有限制WPS可以用于哪些应用程序，也没有限制它可以绑定到什么应用程序。因此，WPS已经成功地与业务流程建模技术进行了很好的集成，如下图1.1所示（图片来源：OGC文档09-053r5）。</p><p><img src="'+s+'" alt=""></p><p>图1.1 WPS集成业务流程建模</p><p>上图显示了在OGC测试床系列的第5阶段中使用业务流程执行语言（BPEL）和WPS实现的工作流。工作流包括用于数据融合和质量评估的组件。最近使用的业务流程模型和其他业务流程表示法也有使用。</p><h3 id="_1-2-1-与其他ogc-wps的关系" tabindex="-1">1.2.1 与其他OGC WPS的关系 <a class="header-anchor" href="#_1-2-1-与其他ogc-wps的关系" aria-hidden="true">#</a></h3><ul><li>OGC Web功能服务接口标准（WFS）：WFS可以用来提供特性数据，作为WPS提供的进程的输入。</li><li>OGC Web Coverage服务接口标准（WCS）：WCS可用于提供覆盖数据，如栅格图像，作为WPS提供的进程的输入。</li><li>OGC地理标记语言（GML）编码标准：GML可以用于编码作为输入提供给WPS的数据，也可以用于编码作为WPS输出的数据。</li></ul><h3 id="_1-2-2-术语和定义" tabindex="-1">1.2.2 术语和定义 <a class="header-anchor" href="#_1-2-2-术语和定义" aria-hidden="true">#</a></h3><ul><li>进程（<strong>Process</strong>）：进程p 是一个函数，对于每个输入返回相应<strong>的</strong>输出。</li><li>进程描述（<strong>Process description</strong>）：进程描述是指定进程接口的信息模型。进程描述用于进程本身的机器可读描述，但也提供有关进程输入和输出的一些基本信息。</li><li>进程输入（<strong>Process input</strong>）：进程输入是进程的参数，是指提供给进程的数据。每个进程输入都是一个可识别的项目。</li><li>进程输入（<strong>Process output</strong>）：进程输出是进程的结果，是指进程返回的数据。每个进程输出都是一个可识别的项目。</li><li>进程配置文件（<strong>Process profile</strong>）：进程配置文件是接口级别上进程的描述。进程概况可能具有不同的抽象级别并涵盖多个方面。在一般层面上，过程简档可能仅指过程所提供的功能，即通过给出如何从输入导出输出的口头或正式定义。在具体层面上，过程配置文件可以完全定义输入和输出，包括数据类型定义和格式。</li><li>WPS服务器（<strong>Process profile</strong>）：WPS 服务器是一种 Web 服务器，提供对简单或复杂计算处理服务的访问。</li><li>进程产品（<strong>Process offering</strong>）：进程产品是可以在特定服务实例上执行的可识别进程。进程产品包含进程描述以及有关支持的执行协议（例如同步和异步执行）的特定于服务的信息。</li><li>进程执行（<strong>Process execution</strong>）：进程的执行是针对给定的数据输入集计算给定进程的输出的操作。</li><li>作业（<strong>Process profile</strong>）：（处理）作业是由处理服务为特定进程执行创建的服务器端对象。作业在同步执行的情况下可能是潜在的，或者在异步执行的情况下是显式的。由于客户端只能间接访问处理作业，因此使用作业 ID 来监视和控制作业。</li><li>WPS 服务配置文件（<strong>Service profiles for WPS</strong>）：WPS 的服务配置文件是一个一致性类，它通过 (1) 指定支持的服务操作、(2) 进程模型、(3) 支持的进程执行模式、(4) 支持的进程执行模式来定义 WPS 服务器的一般功能。操作绑定。</li></ul><h3 id="_1-2-3-缩写术语" tabindex="-1">1.2.3 缩写术语 <a class="header-anchor" href="#_1-2-3-缩写术语" aria-hidden="true">#</a></h3><ul><li><strong>CRS</strong>： Coordinate Reference System 坐标参考系</li><li><strong>GML</strong>：Geography Markup Language 地理标记语言</li><li><strong>HTTP</strong>：Hypertext Transfer Protocol 超文本传输协议</li><li>**ISO：**International Organization for Standardization 国际标准化组织</li><li>**KVP：**Keyword Value Pair 关键字值对</li><li>**MIME：**Multipurpose Internet Mail Extensions 多用途互联网邮件扩展</li><li>**OGC：**Open Geospatial Consortium 开放地理空间联盟</li><li>**UML：**Unified Modeling Language 统一建模语言</li><li><strong>URI</strong>：Universal Resource Identifier 通用资源标识符</li><li>**URL：**Uniform Resource Locator 统一资源定位器</li><li><strong>WPS</strong>：Web Processing Service 网页处理服务</li><li>**XML：**Extensible Markup Language 可扩展标记语言</li></ul>',13),n=[l];function a(g,c,P,S,_,p){return i(),r("div",null,n)}const u=e(t,[["render",a]]);export{W as __pageData,u as default};
