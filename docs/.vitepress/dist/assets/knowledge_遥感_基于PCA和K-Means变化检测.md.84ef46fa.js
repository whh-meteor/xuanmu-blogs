import{_ as s,o as n,c as a,d as p}from"./app.d5842a7a.js";const l="/xuanmu-blogs/assets/img-2023-02-28-20-58-43.7d7b1445.png",o="/xuanmu-blogs/assets/img-2023-02-28-21-00-54.4db2f027.png",e="/xuanmu-blogs/assets/img-2023-02-28-21-02-33.c529af36.png",d=JSON.parse('{"title":"基于PCA和K-Means的多时相卫星图像非监督变化检测","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.差值映象与特征向量空间","slug":"_1-差值映象与特征向量空间","link":"#_1-差值映象与特征向量空间","children":[]},{"level":2,"title":"2. 构建特征向量空间","slug":"_2-构建特征向量空间","link":"#_2-构建特征向量空间","children":[]},{"level":2,"title":"3. 特征向量空间的聚类和变化图","slug":"_3-特征向量空间的聚类和变化图","link":"#_3-特征向量空间的聚类和变化图","children":[]},{"level":2,"title":"引用","slug":"引用","link":"#引用","children":[]}],"relativePath":"knowledge/遥感/基于PCA和K-Means变化检测.md"}'),c={name:"knowledge/遥感/基于PCA和K-Means变化检测.md"},t=p(`<h1 id="基于pca和k-means的多时相卫星图像非监督变化检测" tabindex="-1">基于PCA和K-Means的多时相卫星图像非监督变化检测 <a class="header-anchor" href="#基于pca和k-means的多时相卫星图像非监督变化检测" aria-hidden="true">#</a></h1><p>不同时间采集的区域图像的自动变化检测是图像处理中最有趣的课题之一。这样的图像被称为多时间图像。变化检测涉及分析两个多时相卫星图像，以发现在两个时间戳之间可能发生的任何变化。它是遥感的主要用途之一，在国防检查、毁林评估、土地利用分析、灾害评估和监测许多其他环境/人为变化等广泛任务中得到应用。</p><p>我们将在这篇博客文章中概述一种无监督的变化检测方法。它涉及到对使用多时相图像构建的变化数据即差异图像的自动分析。差值图像是两个图像逐个像素的减法。然后通过主成分分析(PCA)从差值图像中提取像素块的特征向量。随后，通过将像素的邻域投影到特征向量上，为差异图像中的每个像素构造特征向量。特征向量空间是所有像素的特征向量的集合，通过K-Means算法进行聚类后，我们得到两个簇-一个表示属于变化的类别的像素，另一个表示属于不变的类别的像素。每个像素将属于任一簇，因此可以生成改变图。因此，实现此应用程序的步骤如下：</p><ol><li><p>差异图像生成与特征向量空间(EVS)</p></li><li><p>构建特征向量空间(FVS)</p></li><li><p>特征向量空间和变化图的聚类</p></li></ol><p>我们将在美国地质调查局(USGS)网站上提供的陆地卫星图像开发的图像库上演示该算法的工作。该网站提供了各种分辨率的图像，并详细描述了图像中发生的变化。一些多时相图像对可以从这里下载。</p><p><a href="https://www.dropbox.com/s/1y03i19ov78vewc/corpus.zip?dl=0" target="_blank" rel="noreferrer">https://www.dropbox.com/s/1y03i19ov78vewc/corpus.zip?dl=0</a></p><h2 id="_1-差值映象与特征向量空间" tabindex="-1">1.差值映象与特征向量空间 <a class="header-anchor" href="#_1-差值映象与特征向量空间" aria-hidden="true">#</a></h2><p>如前所述，差异图像具有2个灰度图像的对应像素的强度值的绝对值差异。因此，计算的差异图像将使得与土地变化相关联的像素的值将具有与与未改变的区域相关联的像素的值显著不同的值。</p><p><code>difference image (i, j) = |image1(i, j) - image2(i, j)|</code></p><p>如果Image1和Image2变量是两个图像，则可以在Python中按如下方式完成此操作：</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> scipy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">misc </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> imread</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> imsave</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> imresize</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> numpy </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> np</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">image1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">imread</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">imagepath1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">image2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">imread</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">imagepath2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">new_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">asarray</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image1</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">new_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> new_size</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">astype</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">image1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">imresize</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">new_size</span><span style="color:#89DDFF;">)).</span><span style="color:#82AAFF;">astype</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">np</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int16</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">image2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">imresize</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">new_size</span><span style="color:#89DDFF;">)).</span><span style="color:#82AAFF;">astype</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">np</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int16</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">diff_image </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">abs</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image1 </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> image2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>接下来是构建特征向量空间的任务。在此之前，让我们快速浏览一下什么是PCA。PCA是一种强调变化并在数据集中带出强大模式的技术。它将一组可能相关变量的观测值转换为一组线性不相关变量的值，称为主成分。它是一种广泛使用的降维方法。</p><p>PCA 获取数据集，并在对其执行均值归一化后确定其协方差矩阵。计算协方差矩阵的特征向量和特征值（给我们 EVS），然后按特征值的降序对特征向量进行排序。这个排序步骤是PCA算法的实际启示。特征向量已按特征值的降序排序，因为具有最高特征值的特征向量是数据集的主成分。该向量显示大多数数据沿哪个方向倾斜。因此，通过PCA，我们已经能够提取表征数据的线。由于这是对PCA的简要介绍，我们鼓励您从这里和这里阅读更多关于它和相关概念的信息。 <a href="http://sebastianraschka.com/Articles/2015_pca_in_3_steps.html" target="_blank" rel="noreferrer">http://sebastianraschka.com/Articles/2015_pca_in_3_steps.html</a></p><p>在这种方法中，我们从差异图像中获取大小为 5 x 5 的非重叠块，并将它们展平为行向量。可以调整图像大小，使两个尺寸都是 5 乘以 的倍数。这些行向量的集合形成一个向量集。在脚本中，正是这样做的。如果我们的差异图像的大小为 ，则向量集中的行数将为<img src="`+l+`" alt="">。</p><p><code>scipy.misc.imresize()change_detection.py find_vector_set()m x n</code></p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">find_vector_set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">diff_image</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">new_size</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    vector_set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">zeros</span><span style="color:#89DDFF;">((</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">new_size</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;"> new_size</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">/</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">),</span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> vector_set</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> new_size</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">            k </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> k </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> new_size</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">                block   </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> diff_image</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> k</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">k</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">                feature </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ravel</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">                vector_set</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> feature</span></span>
<span class="line"><span style="color:#A6ACCD;">                k </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> k </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">            j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">        i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    mean_vec   </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mean</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">vector_set</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">axis</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    vector_set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> vector_set </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> mean_vec   </span><span style="color:#676E95;">#mean normalization</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> vector_set</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mean_vec</span></span>
<span class="line"></span></code></pre></div><p>然后将 PCA 应用于该向量集以获得特征向量空间。特征向量空间将是一个 25 x 25 矩阵;它的每一列都是 25 维的特征向量。在 Python 中，从 中我们可以简单地导入模块并使用它来对变量执行 PCA 以获得变量.</p><pre><code>\`sklearn.decompositionPCAvector_setEVS\`
</code></pre><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> sklearn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decomposition</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">PCA </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> PCA</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">pca </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PCA</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">pca</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">vector_set</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">EVS </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> pca</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">components_</span></span>
<span class="line"></span></code></pre></div><h2 id="_2-构建特征向量空间" tabindex="-1">2. 构建特征向量空间 <a class="header-anchor" href="#_2-构建特征向量空间" aria-hidden="true">#</a></h2><p>构建FVS涉及再次从差异图像中获取5 x 5块，将它们展平，最后将它们投影到EVS上，只是这一次，块将重叠。向量空间（VS）首先是通过为差分图像的每个像素构造一个向量来创建的，这样一种5 x 5块实际上是像素的5 x 5邻域。这里需要注意的是，根据此逻辑，4 个边界行和 4 个边界列像素不会获得任何特征向量，因为它们不会有 5 x 5 邻域。（我们可以通过排除这些像素来管理，因为可以安全地假设这里发生的任何变化都将集中在图像的中间区域，而不是边缘）。因此，我们将在 FVS 中使用所有 25 维的特征向量。将FVS投影到25维EVS仅意味着执行以下矩阵乘法(m x n)- 8</p><p><code>(VS)((m x n - 8) x 25) .(EVS)(25 x 25) = (FVS)(m x n - 8) x 25</code></p><p>下图总结了到目前为止在该方法中遵循的步骤。 <img src="`+o+`" alt=""></p><p>函数为我们确定特征向量空间。该函数与 类似，但从差异图像中提取重叠块。<code>find_FVS()find_vector_set()</code></p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">find_FVS</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">EVS</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">diff_image</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">mean_vec</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">new</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">    feature_vector_set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> new</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> new</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            block </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> diff_image</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">            feature </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flatten</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            feature_vector_set</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">feature</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">        i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    FVS </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">feature_vector_set</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> EVS</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    FVS </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> FVS </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> mean_vec</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> FVS</span></span>
<span class="line"></span></code></pre></div><p>像素的特征向量现在位于其方差最大化的空间中。这将有助于后续的聚类步骤，以更好地将像素分为 2 类 – 更改的像素 （） 和未更改的像素 （pix_cpix_u）。</p><h2 id="_3-特征向量空间的聚类和变化图" tabindex="-1">3. 特征向量空间的聚类和变化图 <a class="header-anchor" href="#_3-特征向量空间的聚类和变化图" aria-hidden="true">#</a></h2><p>像素的特征向量携带信息，无论像素具有已更改像素的特征还是未更改像素的特征。构建特征向量空间后，我们现在需要对其进行聚类，以便将像素分组为两个不相交的类。我们将使用 K-means 算法来做到这一点。因此，每个像素将被分配给一个集群，使得集群的平均向量和像素的特征向量之间的距离最小。每个像素都有一个从 1 到 K 的标签，表示它们所属的簇号。</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> sklearn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cluster </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> KMeans</span></span>
<span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> collections </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> Counter</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">clustering</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FVS</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">components</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">new</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    kmeans </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">KMeans</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">components</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">verbose</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    kmeans</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">FVS</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    output </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> kmeans</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">predict</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">FVS</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    count  </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Counter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">output</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    least_index </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> count</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">get</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    change_map  </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reshape</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">output</span><span style="color:#89DDFF;">,(</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> new</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> least_index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> change_map</span></span>
<span class="line"></span></code></pre></div><p>Date: November 25, 2017 Author: 26 Comments Automatic change detection in images of a region acquired at different times is one the most interesting topics of image processing. Such images are known as multi temporal images. Change detection involves the analysis of two multi temporal satellite images to find any changes that might have occurred between the two time stamps. It is one of the major utilization of remote sensing and finds application in a wide range of tasks like defence inspections, deforestation assessment, land use analysis, disaster assessment and monitoring many other environmental/man-made changes.</p><p>我们将在这篇博文中概述一种用于更改检测的无监督方法。它涉及使用多时态图像构建的变化数据（即差异图像）的自动分析。差异图像是 2 个图像的逐像素减去。然后通过主成分分析 （PCA） 提取来自差异图像的像素块的特征向量。随后，通过将差分图像中的每个像素的邻域投影到特征向量上，为该特征向量构建特征向量。特征向量空间是所有像素的特征向量的集合，在通过 K-means 算法进行聚类时，给了我们两个聚类——一个表示属于已更改类的像素，另一个表示属于未更改类的像素。每个像素将属于任一聚类，因此可以生成更改映射。因此，实现此应用程序的步骤是：</p><p>差分图像生成和特征向量空间 （EVS） 构建特征向量空间 （FVS） 特征向量空间和变化映射的聚类 我们将在从美国地质调查局（USGS）提供的LANDSAT图像开发的图像语料库上演示该算法的工作原理。该网站提供各种分辨率的图像，并详细说明图像中发生的变化。可以从此处下载一些多时态图像对。</p><p>让我们潜入！</p><ol><li>差分图像和特征向量空间 如前所述，差分图像具有2个灰度图像的相应像素的强度值的绝对值差。因此，计算出的差异图像将使与土地变化相关的像素值与与未更改区域相关的像素的值明显不同。</li></ol><p>difference image (i, j) = |image1(i, j) - image2(i, j)|</p><p>这可以在 Python 中完成，如果 image1 和 image2 变量是 2 个图像：</p><p>1 2 3 4 5 6 7 8 9 10 from scipy.misc import imread, imsave, imresize import numpy as np</p><p>image1 = imread(imagepath1) image2 = imread(imagepath2) new_size = np.asarray(image1.shape) / 5 new_size = new_size.astype(int) * 5 image1 = imresize(image1, (new_size)).astype(np.int16) image2 = imresize(image2, (new_size)).astype(np.int16) diff_image = abs(image1 - image2) 接下来是构建特征向量空间的任务。在此之前，让我们快速浏览一下什么是PCA。PCA是一种强调变化并在数据集中带出强大模式的技术。它将一组可能相关变量的观测值转换为一组线性不相关变量的值，称为主成分。它是一种广泛使用的降维方法。</p><p>PCA 获取数据集，并在对其执行均值归一化后确定其协方差矩阵。计算协方差矩阵的特征向量和特征值（给我们 EVS），然后按特征值的降序对特征向量进行排序。这个排序步骤是PCA算法的实际启示。特征向量已按特征值的降序排序，因为具有最高特征值的特征向量是数据集的主成分。该向量显示大多数数据沿哪个方向倾斜。因此，通过PCA，我们已经能够提取表征数据的线。由于这是对PCA的简要介绍，我们鼓励您从这里和这里阅读更多关于它和相关概念的信息。</p><p>在这种方法中，我们从差异图像中获取大小为 5 x 5 的非重叠块，并将它们展平为行向量。可以调整图像大小，使两个尺寸都是 5 乘以 的倍数。这些行向量的集合形成一个向量集。在脚本中，正是这样做的。如果我们的差异图像的大小为 ，则向量集中的行数将为 \\frac {m x n}{5 x 5}。scipy.misc.imresize()change_detection.py find_vector_set()m x n</p><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 def find_vector_set(diff_image, new_size):</p><pre><code>i = 0
j = 0
vector_set = np.zeros((int(new_size[0] * new_size[1] / 25),25))
while i &lt; vector_set.shape[0]:
    while j &lt; new_size[0]:
        k = 0
        while k &lt; new_size[1]:
            block   = diff_image[j:j+5, k:k+5]
            feature = block.ravel()
            vector_set[i, :] = feature
            k = k + 5
        j = j + 5
    i = i + 1

mean_vec   = np.mean(vector_set, axis = 0)
vector_set = vector_set - mean_vec   #mean normalization

return vector_set, mean_vec
</code></pre><p>然后将 PCA 应用于该向量集以获得特征向量空间。特征向量空间将是一个 25 x 25 矩阵;它的每一列都是 25 维的特征向量。在 Python 中，从 中我们可以简单地导入模块并使用它来对变量执行 PCA 以获得变量。sklearn.decompositionPCAvector_setEVS</p><p>1 2 3 4 5 from sklearn.decomposition.PCA import PCA</p><p>pca = PCA() pca.fit(vector_set) EVS = pca.components_ 2. 构建特征向量空间 构建FVS涉及再次从差异图像中获取5 x 5块，将它们展平，最后将它们投影到EVS上，只是这一次，块将重叠。向量空间（VS）首先是通过为差分图像的每个像素构造一个向量来创建的，这样一种5 x 5块实际上是像素的5 x 5邻域。这里需要注意的是，根据此逻辑，4 个边界行和 4 个边界列像素不会获得任何特征向量，因为它们不会有 5 x 5 邻域。（我们可以通过排除这些像素来管理，因为可以安全地假设这里发生的任何变化都将集中在图像的中间区域，而不是边缘）。因此，我们将在 FVS 中使用所有 25 维的特征向量。将FVS投影到25维EVS仅意味着执行以下矩阵乘法(m x n)- 8</p><p>(VS)((m x n - 8) x 25) .(EVS)(25 x 25) = (FVS)(m x n - 8) x 25</p><p>下图总结了到目前为止在该方法中遵循的步骤。</p><p>图1 构建特征向量空间的流程图 函数为我们确定特征向量空间。该函数与 类似，但从差异图像中提取重叠块。find_FVS()find_vector_set()</p><p>1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 def find_FVS(EVS, diff_image, mean_vec, new):</p><pre><code>i = 2
feature_vector_set = []

while i &lt; new[0] - 2:
    j = 2
    while j &lt; new[1] - 2:
        block = diff_image[i-2:i+3, j-2:j+3]
        feature = block.flatten()
        feature_vector_set.append(feature)
        j = j+1
    i = i+1

FVS = np.dot(feature_vector_set, EVS)
FVS = FVS - mean_vec
return FVS
</code></pre><p>像素的特征向量现在位于其方差最大化的空间中。这将有助于后续的聚类步骤，以更好地将像素分为 2 类 – 更改的像素 （） 和未更改的像素 （pix_cpix_u）。</p><ol start="3"><li>特征向量空间的聚类和变化图 像素的特征向量携带信息，无论像素具有已更改像素的特征还是未更改像素的特征。构建特征向量空间后，我们现在需要对其进行聚类，以便将像素分组为两个不相交的类。我们将使用 K-means 算法来做到这一点。因此，每个像素将被分配给一个集群，使得集群的平均向量和像素的特征向量之间的距离最小。每个像素都有一个从 1 到 K 的标签，表示它们所属的簇号。</li></ol><p>1 2 3 4 5 6 7 8 9 10 11 12 13 from sklearn.cluster import KMeans from collections import Counter</p><p>def clustering(FVS, components, new):</p><pre><code>kmeans = KMeans(components, verbose = 0)
kmeans.fit(FVS)
output = kmeans.predict(FVS)
count  = Counter(output)

least_index = min(count, key = count.get)
change_map  = np.reshape(output,(new[0] - 4, new[1] - 4))
return least_index, change_map
</code></pre><p>在我们的实验中，经验发现在K = 3时获得最佳结果。因此，中的参数将是 3。请记住，即使我们必须将像素分为 2 个类别，我们也选择了 K = 3，而不是 2。现在我们如何确定这些聚类中的哪一个包含属于已更改类的像素？可以假设包含最少像素数（用变量表示）的聚类是表示变化类的聚类，因为卫星图像中的背景或多或少保持不变，并且发生的变化相对较小。此外，此聚类的均值将是最高的。该聚类的平均值最高背后的原因是，发生某些变化的区域中的差异图像像素值高于没有变化的区域中的像素值。<code>componentsclustering()least_index</code></p><p>因此，总之，像素数最少且均值最高的聚类是属于已更改类的聚类。</p><p>有了这些信息，我们现在将构建一个更改映射 - 一个二进制图像来显示更改检测的输出。我们选择保持背景为黑色，并显示白色的变化，即这些像素的强度值将为 255。您也可以反其道而行之。因此 <img src="`+e+`" alt=""></p><p>以下 Python 行完成此任务：</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">change_map</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">change_map </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> least_index</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span></span>
<span class="line"><span style="color:#A6ACCD;">change_map</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">change_map </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#82AAFF;">imsave</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">change_map.jpg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> change_map</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><p>用于对卫星图像执行更改检测的整个 Python 代码如下：</p><div class="language-py"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki has-diff"><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> cv2</span></span>
<span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> numpy </span><span style="color:#89DDFF;">as</span><span style="color:#A6ACCD;"> np</span></span>
<span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> sklearn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">cluster </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> KMeans</span></span>
<span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> sklearn</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">decomposition </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> PCA</span></span>
<span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> collections </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> Counter</span></span>
<span class="line"><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> scipy</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">misc </span><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> imread</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> imresize</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> imsave</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">find_vector_set</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">diff_image</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">new_size</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">    vector_set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">zeros</span><span style="color:#89DDFF;">((</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">new_size</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">*</span><span style="color:#82AAFF;"> new_size</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">/</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">),</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> vector_set</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> new_size</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">            k </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> k </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> new_size</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]:</span></span>
<span class="line"><span style="color:#A6ACCD;">                block   </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> diff_image</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> k</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">k</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">5</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">                feature </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ravel</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">                vector_set</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> feature</span></span>
<span class="line"><span style="color:#A6ACCD;">                k </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> k </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">            j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">        i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    mean_vec   </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">mean</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">vector_set</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">axis</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    vector_set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> vector_set </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> mean_vec</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> vector_set</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mean_vec</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">find_FVS</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">EVS</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">diff_image</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">mean_vec</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">new</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">    feature_vector_set </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[]</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> new</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">        j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">while</span><span style="color:#A6ACCD;"> j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> new</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">            block </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> diff_image</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">j</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">            feature </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">flatten</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">            feature_vector_set</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">feature</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">            j </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> j</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;">        i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> i</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    FVS </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">dot</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">feature_vector_set</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> EVS</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    FVS </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> FVS </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> mean_vec</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#C3E88D;">feature vector space size</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> FVS</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> FVS</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">clustering</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">FVS</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">components</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">new</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    kmeans </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">KMeans</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">components</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">verbose</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    kmeans</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">FVS</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    output </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> kmeans</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">predict</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">FVS</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    count  </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Counter</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">output</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    least_index </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">min</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">count</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">key</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;"> count</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">get</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    change_map  </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">reshape</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">output</span><span style="color:#89DDFF;">,(</span><span style="color:#82AAFF;">new</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> new</span><span style="color:#89DDFF;">[</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">]</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">))</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> least_index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> change_map</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">find_PCAKmeans</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">imagepath1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">imagepath2</span><span style="color:#89DDFF;">):</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    image1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">imread</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">imagepath1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    image2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">imread</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">imagepath2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    new_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">asarray</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image1</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">shape</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">    new_size </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> new_size</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">astype</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">    image1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">imresize</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image1</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">new_size</span><span style="color:#89DDFF;">)).</span><span style="color:#82AAFF;">astype</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">np</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int16</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    image2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">imresize</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image2</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">new_size</span><span style="color:#89DDFF;">)).</span><span style="color:#82AAFF;">astype</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">np</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">int16</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    diff_image </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">abs</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">image1 </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> image2</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">imsave</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">diff.jpg</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> diff_image</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    vector_set</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> mean_vec </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">find_vector_set</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">diff_image</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> new_size</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    pca     </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PCA</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">    pca</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fit</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">vector_set</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    EVS </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> pca</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">components_</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    FVS     </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">find_FVS</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">EVS</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> diff_image</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> mean_vec</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> new_size</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    components </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span></span>
<span class="line"><span style="color:#A6ACCD;">    least_index</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> change_map </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">clustering</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">FVS</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> components</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> new_size</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    change_map</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">change_map </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> least_index</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span></span>
<span class="line"><span style="color:#A6ACCD;">    change_map</span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">change_map </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">255</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    change_map </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> change_map</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">astype</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">np</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">uint8</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    kernel     </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> np</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">asarray</span><span style="color:#89DDFF;">(((</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#82AAFF;">                             </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#82AAFF;">                             </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#82AAFF;">                             </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">),</span></span>
<span class="line"><span style="color:#82AAFF;">                             </span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)),</span><span style="color:#82AAFF;"> </span><span style="color:#A6ACCD;">dtype</span><span style="color:#89DDFF;">=</span><span style="color:#82AAFF;">np</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">uint8</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    cleanChangeMap </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cv2</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">erode</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">change_map</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">kernel</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">imsave</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">changemap.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> change_map</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">imsave</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">cleanchangemap.jpg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> cleanChangeMap</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">if</span><span style="color:#A6ACCD;"> __name__ </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">__main__</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    a </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">image1.jpg</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    b </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">image2.jpg</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">find_PCAKmeans</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">a</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;">b</span><span style="color:#89DDFF;">)</span></span>
<span class="line"></span></code></pre></div><h2 id="引用" tabindex="-1">引用 <a class="header-anchor" href="#引用" aria-hidden="true">#</a></h2><p>[1] Turgay Celik, “Unsupervised change detection in satellite images using Principal Component Analysis and K-means clustering”, IEEE Geoscience and Remote Sensing Letters, Vol. 6, No.4, October 2009.</p>`,64),F=[t];function r(D,y,A,C,i,m){return n(),a("div",null,F)}const g=s(c,[["render",r]]);export{d as __pageData,g as default};
